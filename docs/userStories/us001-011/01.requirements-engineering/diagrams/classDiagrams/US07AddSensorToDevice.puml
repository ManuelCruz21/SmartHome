@startuml
'https://plantuml.com/class-diagram

class AddSensorToDeviceController{
    -house: House
    -catalogue: CatalogueSensor
    -roomsDTOAndRooms: Map<RoomDTO, Room>
    -devicesDTOAndDevices: Map<DeviceDTO, Device>

    +AddSensorToDeviceController(house: House, catalogue: CatalogueSensor)
    -isValidConstructorArguments(house: House, catalogue: CatalogueSensor): boolean
    +getRooms(): List<RoomDTO>
    +getDevicesFromRoom(roomDTO: RoomDTO): List<DeviceDTO>
    +getSensorModels(): List<String>
    +addSensorToDevice(deviceDTO: DeviceDTO, model: String): SensorDTO
 }

class RoomAssembler{
    +<<static>> domain2DTO(rooms: List<Room>): List<RoomDTO>
    +<<static>> dto2Domain(roomDTO: RoomDTO): Room
    +<<static>> domain2DTOMap(rooms: List<Room>): RoomDTO
}

class DeviceAssembler{
    +<<static>> domain2DTO(devices: List<Device>): List<DeviceDTO>
    +<<static>> dto2Domain(deviceDTO: DeviceDTO): Device
}

class SensorAssembler{
    +<<static>> domain2DTO(sensor: Sensor): SensorDTO
}

class House{
    -locationFactory: LocationFactory
    -roomFactory: RoomFactory
    -location: Location
    -rooms: List<Room>

    #House(locationFactory: LocationFactory, roomFactory: RoomFactory, deviceFactory: DeviceFactory)
    +getRooms(): List<Room>
}

class Room{
    -name: String
    -floor: int
    -dimensionsFactory: DimensionsFactory
    -dimensions: Dimensions
    -roomId: UUID
    -devices: List<Device>

    #Room(location: Location)
    -setName(name: String): void
    -setDimensions(dimensions: Dimensions): void
    -setFloor(floor: int): void
    +getDevices(): List<Device>
}

class Device{
    -name:String
    -status: boolean
    -sensors: List<Sensor>
    -deviceId: UUID
    -actuators: List<Actuator>

    #Device(name: String)
    -setName(name: String): void
    +addSensor(model: String, catalogue: CatalogueSensor, sensorFactory: SensorFactory): Sensor
    +addSensorToDevice(sensor: Sensor): Sensor
    +getName(): String
    +getDeviceId(): UUID
    +toString(): String
}

class CatalogueSensor{
    -listSensorTypes: List<SensorType>
    -listStringClassesSensors: List<String>

    #CatalogueSensor(filePathname: String)
    -setListSensorTypes(): void
    -setListStringClassesSensors(): void
    +addSensorType(strDescription: String, unit: Unit, sensorTypeFactory: SensorTyperFactory): SensorType
    +addSensorTypeToList(sensorType: SensorType): SensorType
    +getSensorType(strDescription: String): SensorType
    +getSensorTypes(): List<SensorType>
    +getSensorModels(): List<String>
    +getSensor(model: String, sensorFactory: SensorFactory): Sensor
}

class SensorFactory{
    +createSensor(model: String, catalogue: CatalogueSensor): Sensor
}

class GenericSensor{
    -sensorType: SensorType
    -value: Value

    #Sensor(catalogue: CatalogueSensor)
    +getSensorType(): SensorType
    +getValue(): Value
}

Interface Sensor{
    getSensorType(): SensorType
    getValue(): Value
}

class RoomDTO{
    -name: String
    -dimensions: Dimensions
    -floor: int
    -roomId: UUID

    #RoomDTO(room: Room)
}

class DeviceDTO{
    -name: String
    -status: boolean
    -deviceId: UUID
    -roomDTO: RoomDTO
    -deviceFunctionalities: List<String>
    -sensors: List<String>
    -sensors: List<String>

    #DeviceDTO(device: Device)
}

class SensorDTO{
    -sensorType: SensorType

    #SensorDTO(sensor: Sensor)
}

AddSensorToDeviceController "1" ..> "1" House: <<uses>>
AddSensorToDeviceController "1" ..> "1" Room: <<uses>>
AddSensorToDeviceController "1" ..> "1" Device: <<uses>>
AddSensorToDeviceController "1" ..> "1" RoomAssembler: <<uses>>
AddSensorToDeviceController "1" ..> "1" DeviceAssembler: <<uses>>
AddSensorToDeviceController "1" ..> "1" SensorAssembler: <<uses>>

RoomAssembler "1" ..> "*" RoomDTO: <<creates>>

DeviceAssembler "1" ..> "*" DeviceDTO: <<creates>>

SensorAssembler "1" ..> "1" SensorDTO: <<creates>>

SensorFactory "1" ..> "1" GenericSensor: <<creates>>

House "1" --> "*" Room: <<has>>

Room "1" --> "*" Device: <<has>>

Device "1" --> "*" GenericSensor: <<has>>
Device "1" ..> "1" CatalogueSensor: <<uses>>

GenericSensor "1" ..|> "1" Sensor: <<implements>>

CatalogueSensor "1" ..> "*" SensorFactory: <<uses>>





@enduml