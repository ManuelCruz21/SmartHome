@startuml
!pragma layout smetana

participant " " as User

box "Controller" #LightBlue
participant ":AddSensorToDevice_Controller" as AddSensorToDevice_Controller
end box

box "Room" #LightGreen
participant ":RoomService" as roomService

participant ":RoomRepository" as RoomRepository

participant ":RoomAssembler" as RoomAssembler

participant "roomDTO:RoomDTO" as RoomDTO
end box

box "Device" #LightYellow
participant ":DeviceService" as DeviceService

participant ":DeviceRepository" as DeviceRepository

participant ":DeviceAssembler" as DeviceAssembler

participant "roomID:RoomID" as RoomID


participant "deviceID:DeviceID" as DeviceID

participant "deviceDTO:DeviceDTO" as DeviceDTO
end box

box "SensorModel" #LightCyan
participant ":SensorModelService" as SensorModelService

participant "SensorModelRepository" as SensorModelRepository

participant ":SensorModelAssembler" as SensorModelAssembler

participant "sensorModelID:SensorModelID" as sensorModelID

participant "sensorModelDTO:SensorModelDTO" as SensorModelDTO
end box

box "Sensor" #LightPink
participant ":SensorAssembler" as SensorAssembler

participant "sensorDTO:SensorDTO" as SensorDTO




participant ":SensorService" as sensorService

participant ":SensorFactory" as SensorFactory

participant "sensor:Sensor" as Sensor

participant ":SensorRepository" as SensorRepository
end box

autonumber

'----------------------------------------------------'

User o-> AddSensorToDevice_Controller: getRooms()

activate AddSensorToDevice_Controller

AddSensorToDevice_Controller -> roomService: getRooms()

activate roomService

roomService -> RoomRepository: findAll()

activate RoomRepository

RoomRepository --> roomService: lisOfRooms

deactivate RoomRepository

roomService --> AddSensorToDevice_Controller: lisOfRooms

deactivate roomService

AddSensorToDevice_Controller -> RoomAssembler: domainToDTO(Rooms)

activate RoomAssembler

loop for each room
    create RoomDTO
    RoomAssembler -> RoomDTO: createRoomDTO (room)
    activate RoomDTO
    RoomDTO --> RoomAssembler: roomDTO
    deactivate RoomDTO
    RoomAssembler -> RoomAssembler: addRoomDTOToList(roomDTO)
end

RoomAssembler --> AddSensorToDevice_Controller: listRoomsDTO

deactivate RoomAssembler

AddSensorToDevice_Controller --> User: listRoomsDTO

deactivate AddSensorToDevice_Controller

'----------------------------------------------------'

User o-> AddSensorToDevice_Controller: getDevices(roomDTO)

activate AddSensorToDevice_Controller


AddSensorToDevice_Controller -> DeviceAssembler : dtoToDomain(roomDTO)

activate DeviceAssembler

create RoomID

DeviceAssembler -> RoomID: createRoomID(strRoomIdDTO)

activate RoomID

RoomID --> DeviceAssembler: roomId

deactivate RoomID

DeviceAssembler --> AddSensorToDevice_Controller: roomId

deactivate DeviceAssembler

AddSensorToDevice_Controller -> DeviceService: getDevices(roomId)

activate DeviceService

DeviceService -> DeviceRepository: getDevicesByRoomId (roomId)

activate DeviceRepository

DeviceRepository --> DeviceService: listDevices

deactivate DeviceRepository

DeviceService --> AddSensorToDevice_Controller: listDevices

deactivate DeviceService

AddSensorToDevice_Controller  -> DeviceAssembler: deviceToDTO (deviceList)

activate DeviceAssembler

loop for each device in list
    create DeviceDTO
    DeviceAssembler -> DeviceDTO: createDeviceToDTO (device)
    activate DeviceDTO
    DeviceDTO --> DeviceAssembler: deviceDTO
    deactivate DeviceDTO
    DeviceAssembler -> DeviceAssembler: addDeviceDTOToList(deviceDTO)
end
DeviceAssembler --> AddSensorToDevice_Controller: listDeviceDTO

deactivate DeviceAssembler

deactivate DeviceService

AddSensorToDevice_Controller --> User : listDeviceDTO

deactivate AddSensorToDevice_Controller

'----------------------------------------------------'

User o-> AddSensorToDevice_Controller: getSensorModels()

activate AddSensorToDevice_Controller

AddSensorToDevice_Controller -> SensorModelService: getSensorModels()

activate SensorModelService

SensorModelService -> SensorModelRepository: findAll()

activate SensorModelRepository

SensorModelRepository --> SensorModelService: listSensorModels

deactivate SensorModelRepository

SensorModelService --> AddSensorToDevice_Controller: listSensorModels

deactivate SensorModelService

AddSensorToDevice_Controller -> SensorModelAssembler: domainToDTO(listOfSensorModels)

activate SensorModelAssembler

loop for each sensorModel in copyOfSensorModels
create SensorModelDTO
SensorModelAssembler -> SensorModelDTO: createSensorModelDTO(sensorModel)
activate SensorModelDTO
SensorModelDTO --> SensorModelAssembler: sensorModelDTO
deactivate SensorModelDTO
SensorModelAssembler -> SensorModelAssembler: addToList(sensorModelDTO)
end

SensorModelAssembler --> AddSensorToDevice_Controller: listSensorModelsDTO

deactivate SensorModelAssembler

AddSensorToDevice_Controller -> User: listSensorModelsDTO

deactivate AddSensorToDevice_Controller

'----------------------------------------------------'

User o-> AddSensorToDevice_Controller: addSensorToDevice(SensorDataDTO)

activate AddSensorToDevice_Controller

create DeviceID

AddSensorToDevice_Controller -> DeviceID: createDeviceID(DataDTO)

activate DeviceID

DeviceID --> AddSensorToDevice_Controller: deviceID

deactivate DeviceID

create sensorModelID

AddSensorToDevice_Controller -> sensorModelID: createDeviceID(DataDTO)

activate sensorModelID

sensorModelID --> AddSensorToDevice_Controller: sensorModelID

deactivate sensorModelID

AddSensorToDevice_Controller -> sensorService: createSensor(sensorModelID, deviceID)

activate sensorService

sensorService -> SensorFactory: createSensor(sensorModelID, deviceID)

activate SensorFactory


create Sensor
SensorFactory --> Sensor: addSensor(Sensor, deviceID)
activate Sensor

Sensor --> SensorFactory: sensor

deactivate Sensor

SensorFactory --> sensorService: sensor

deactivate SensorFactory

sensorService --> SensorRepository: saveSensor(sensor)

activate SensorRepository

SensorRepository --> sensorService: sensor

deactivate SensorRepository

sensorService --> AddSensorToDevice_Controller: sensor

deactivate sensorService

AddSensorToDevice_Controller -> SensorAssembler: domainToDTO(sensor)

activate SensorAssembler

loop for each Sensor
create SensorDTO
SensorAssembler -> SensorDTO: createSensorDTO(sensor)
activate SensorDTO
SensorDTO --> SensorAssembler: sensorDTO
deactivate SensorDTO
end

SensorAssembler --> AddSensorToDevice_Controller : sensorDTO

deactivate SensorAssembler

AddSensorToDevice_Controller --> User: sensorDTO

deactivate AddSensorToDevice_Controller

@enduml