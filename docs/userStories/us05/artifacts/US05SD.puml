@startuml
!pragma layout smetana


participant  " " as User

participant ":AddDeviceToRoomController" as Controller
participant "roomService:RoomService" as RoomService
participant ":RoomRepository" as RoomRepo

participant "roomAssembler:RoomAssembler" as RoomAssembler
participant "roomDTO:RoomDTO" as RoomDTO
participant "deviceAssembler:DeviceAssembler" as DeviceAssembler
participant "deviceDTO:DeviceDTO" as DeviceDTO
participant "device:Device" as Device
participant "deviceService:DeviceService" as DeviceService
participant "deviceFactory:DeviceFactory" as Factory
participant "device :Device" as Device
participant ":DeviceRepository" as Repository
participant ":DeviceAssembler" as DeviceAssembler
participant "deviceDTO :DeviceDTO" as DeviceDTO
autonumber

User o-> Controller: getRooms()

activate Controller

Controller -> RoomService: getRooms()

activate RoomService

RoomService -> RoomRepo: findAll()

activate RoomRepo

RoomRepo --> RoomService: listRooms

deactivate RoomRepo

RoomService --> Controller: listRooms
deactivate RoomService

Controller -> RoomAssembler : roomToDTO(roomList)

activate RoomAssembler

loop for each room

    create RoomDTO

    RoomAssembler -> RoomDTO: createRoomDTO (room)

     activate RoomDTO

     RoomDTO --> RoomAssembler: roomDTO

      deactivate RoomDTO

     RoomAssembler -> RoomAssembler: addRoomDTOToList(roomDTO)

end
RoomAssembler --> Controller: listRoomDTO

deactivate RoomAssembler

Controller --> User : listRoomDTO
deactivate Controller


User o-> Controller : addDeviceToRoom(strRoomID, strDeviceName)
activate Controller

Controller -> DeviceService : addDevice(strRoomID, strDeviceName)
activate DeviceService

DeviceService -> Factory : createDevice(roomID,deviceName)
activate Factory

create Device
Factory -> Device : create(roomID,deviceName)

activate Device
Device --> Factory : device

deactivate Device
Factory --> DeviceService : device

deactivate Factory
DeviceService -> Repository : save(device)
deactivate DeviceService

activate Repository

Repository --> Controller: device
deactivate Repository


Controller -> DeviceAssembler : domain2DTO(device)
create DeviceDTO

activate DeviceAssembler
DeviceAssembler -> DeviceDTO : createDeviceDTO(device)

activate DeviceDTO
DeviceDTO --> DeviceAssembler : deviceDTO
deactivate DeviceDTO

DeviceAssembler --> Controller : deviceDTO
deactivate DeviceAssembler

Controller --> User : deviceDTO
deactivate Controller
@enduml
