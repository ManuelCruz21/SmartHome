@startuml
!pragma layout smetana

package SmartHome.actuators {

  class SetIntegerActuator {
    - _actuatorType: ActuatorType
    - _value: SetIntegerValue
    - _lowerLimit: int
    - _upperLimit: int
    + SetIntegerActuator(CatalogueActuator catalogue)
    + getActuatorType(): ActuatorType
    + setValueInRange(int lowerLimit, int upperLimit, Value value): Value

  }

  class SetIntegerValue {
    - _value : int
    + SetIntegerValue(int value)
    + clone() : SetIntegerValue
    + toString() : String
  }

}

package SmartHome.domain {

  interface Actuator {
        + getActuatorType(): ActuatorType
  }

  interface Value {
  }

  class ActuatorType {
    - _description: String
    # ActuatorType(String strDescription)
    + getDescription() : String
  }

 class CatalogueActuator {
    - _listActuatorTypes: List<ActuatorType>
    - _listStringClassesActuator : List<String>
    + CatalogueActuator(String filePathname)
    + addActuatorType(String strDescription, ActuatorTypeFactory actuatorTypeFactory): ActuatorType
    + addActuatorTypeToList(ActuatorType actuatorType): ActuatorType
    + getActuatorTypes(): List<ActuatorType>
    + getActuatorType(String strDescription): ActuatorType
    + getActuatorModels(): List<String>
    + getActuator(String strModel, ActuatorFactory actuatorFactory): Actuator
  }


}

SmartHome.actuators.SetIntegerActuator ..|>  SmartHome.domain.Actuator
SmartHome.actuators.SetIntegerActuator "1" --> "1" SmartHome.domain.ActuatorType : <<has>>
SmartHome.actuators.SetIntegerActuator "1" --> "1" SmartHome.actuators.SetIntegerValue : <<has>>
SmartHome.actuators.SetIntegerValue "1" ..|> SmartHome.domain.Value
SmartHome.actuators.SetIntegerActuator ..> "1" SmartHome.domain.CatalogueActuator : <<uses>>

@enduml
