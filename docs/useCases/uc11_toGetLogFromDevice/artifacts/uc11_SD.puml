@startuml
!pragma layout smetana

participant " " as User
participant ":GetListOfAllMeasurementsOfOneDeviceController" as Controller

participant ":DeviceID" as DeviceID
participant ":DeviceService" as DeviceService
participant ":DeviceRepository" as DeviceRepository
participant ":MeasurementsService" as MeasurementsService
participant ":DatePeriod" as DatePeriod
participant ":TimeStamp" as TimeStamp
participant ":MeasurementRepository" as Repository
participant ":MeasurementAssembler" as Assembler
participant ":MeasurementDTO" as DTO

autonumber

note right of User

  Ref UC06:
   I want to get a list of all
   devices in a room.
end note



User o-> Controller: getMeasurementsOfOneDeviceInGivenPeriod(measurementsDataDTO)

activate Controller
'DatePeriod and DeviceID are created
create DatePeriod
Controller -> DatePeriod: DatePeriod (startDate, endDate)
activate DatePeriod
DatePeriod --> Controller: datePeriod

deactivate DatePeriod


create DeviceID
Controller -> DeviceID: DeviceID(deviceID)
activate DeviceID
DeviceID --> Controller: deviceID
deactivate DeviceID


'getDeviceById -> if device is not present, return empty optional
Controller -> DeviceService: getDeviceById(deviceID)
activate DeviceService
DeviceService -> DeviceRepository: getDeviceById(deviceID)
activate DeviceRepository
DeviceRepository --> DeviceService: device
deactivate DeviceRepository
DeviceService --> Controller: device
deactivate DeviceService


'getAllMeasurementsOfDeviceInGivenPeriod -> getStartDate, getEndDate
Controller -> MeasurementsService: getAllMeasurementsOfDeviceInGivenPeriod(deviceID, datePeriod)


'getStartDate -> localDateTimeStart
activate MeasurementsService

MeasurementsService -> DatePeriod: getStartDate()
activate DatePeriod
DatePeriod --> MeasurementsService: localDateTimeStart
deactivate DatePeriod

'getEndDate -> localDateTimeEnd
MeasurementsService -> DatePeriod: getEndDate()
activate DatePeriod
DatePeriod --> MeasurementsService: localDateTimeEnd
deactivate DatePeriod

'create TimeStamp -> timeStampStart
create TimeStamp
MeasurementsService -> TimeStamp: TimeStamp(localDateTimeStart)
activate TimeStamp
TimeStamp --> MeasurementsService: timeStampStart
deactivate TimeStamp

'create TimeStamp -> timeStampEnd
create TimeStamp
MeasurementsService -> TimeStamp: TimeStamp(localDateTimeEnd)
activate TimeStamp
TimeStamp --> MeasurementsService: timeStampEnd
deactivate TimeStamp

'findByDeviceIdAndTimeStampBetween -> look in all measurement repositories
MeasurementsService -> Repository: findByDeviceIdAndTimeStampBetween(deviceID, timeStampStart, timeStampEnd)

activate Repository
Repository --> MeasurementsService: list of measurements

deactivate Repository
MeasurementsService --> Controller: iterable of measurements


deactivate MeasurementsService
Controller -> Assembler: domainToDTO(measurementList)

activate Assembler
create DTO
Assembler -> DTO: MeasurementDTO (measurement)
activate DTO
DTO --> Assembler: measurementDTO

deactivate DTO
Assembler --> Controller: listMeasurementDTO

deactivate Assembler
Controller --> User: listMeasurementDTO
deactivate Controller


@enduml