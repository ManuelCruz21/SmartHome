@startuml
!pragma layout smetana

class GetLogFromDeviceController {

 - logService: ILogService
 - deviceService: IDeviceService
 - logAssembler: IAssembler <Log, LogDTO>

 '+ GetLogFromDeviceController(logService: ILogService, deviceService: IDeviceService, logAssembler: IAssembler <Log, LogDTO>, roomService: IRoomService, roomAssembler: IAssembler <Room, RoomDTO>, deviceAssembler: IAssembler <Device, DeviceDTO>)
 + getLogsFromDevice(logDataDto : LogDataDTO): List<LogDTO>
}


class DeviceServiceImpl {
- deviceRepository: IDeviceRepository

'+DeviceServiceImpl(deviceRepository: IDeviceRepository, deviceFactory: IDeviceFactory, roomRepository: IRoomRepository)
+getDevicesByID(deviceId: DeviceID): Optional<Device>
}

class DeviceRepository {
- DATA: Map<DeviceID, Device>

+ ofIdentity(deviceId: DeviceID): Optional<Device>
}

class LogServiceImpl {
- logRepository: ILogRepository
'+ LogServiceImpl(logRepository: ILogRepository)
+ getDeviceReadingsByTimePeriod(deviceId: DeviceID, datePeriod: DatePeriod): List<Log>
}

class LogRepository {

+ findByDeviceIDAndDatePeriodBetween(deviceId: DeviceID, datePeriod: DatePeriod): List<Log>
}

class LogAssembler {
+ domainToDto(logList: List<Log>): List<LogDTO>
}

class LogDTO {
+ logID: String
+ deviceID: String
+ sensorID: String
+ sensorTypeID: String
+ reading: String
+ timestamp: String
+ unitID: String
}


GetLogFromDeviceController "1" -down-> "1" LogServiceImpl : uses
GetLogFromDeviceController "1" -down-> "1" DeviceServiceImpl : uses
LogServiceImpl "1" -down-> "1" LogRepository : uses
DeviceServiceImpl "1" -down-> "1" DeviceRepository : uses
LogServiceImpl "1" -down-> "1" LogAssembler : uses
LogAssembler "1" -down-> "*" LogDTO : creates

@enduml