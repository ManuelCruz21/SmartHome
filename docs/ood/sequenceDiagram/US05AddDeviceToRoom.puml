@startuml
!pragma layout smetana


participant User as User

participant ":AddDeviceToRoomController" as Controller
participant "serviceRoom:ServiceRoom" as ServiceRoom
participant "serviceDevice:ServiceDevice" as ServiceDevice
participant ":RoomAssembler" as RoomAssembler
participant "roomDTO:RoomDTO" as RoomDTO
participant ":RoomRepository" as RoomRepo
participant ":DeviceAssembler" as DeviceAssembler
participant "deviceDTO:DeviceDTO" as DeviceDTO
participant ":Device" as Device
participant ":DeviceService" as Service
participant ":DeviceFactory" as Factory
participant "device :Device" as Device
participant ":DeviceRepository" as Repository
participant ":DeviceAssembler" as DeviceAssembler
participant "deviceDTO :DeviceDTO" as DeviceDTO
autonumber

User o-> Controller: getRooms()

activate Controller

Controller -> ServiceRoom: getRooms()

activate ServiceRoom

ServiceRoom -> RoomRepo: findAll()

activate RoomRepo

RoomRepo --> ServiceRoom: listRooms

deactivate RoomRepo

ServiceRoom -> RoomAssembler : room2DTO(roomList)

activate RoomAssembler

loop for each room

    create RoomDTO

    RoomAssembler -> RoomDTO: createRoom2DTO (room)

     activate RoomDTO

     RoomDTO --> RoomAssembler: roomDTO

      deactivate RoomDTO

     RoomAssembler -> RoomAssembler: addRoomDTOToList(roomDTO)

end
RoomAssembler --> ServiceRoom: listRoomDTO

deactivate RoomAssembler

ServiceRoom --> Controller: listRoomDTO

deactivate ServiceRoom
Controller --> User : listRoomDTO
deactivate Controller


User o-> Controller : addDeviceToRoom(roomID, deviceName)
activate Controller

Controller -> Service : addDevice(roomID,deviceName)
activate Service

Service -> Factory : createDevice(roomID,deviceName)
activate Factory

create Device
Factory -> Device : create(roomID,deviceName)

activate Device
Device --> Factory : device

deactivate Device
Factory --> Service : device

deactivate Factory
Service -> Repository : save(device)

activate Repository

Repository --> Service : boolean
deactivate Repository


Service -> DeviceAssembler : domain2DTO(device)
create DeviceDTO

activate DeviceAssembler
DeviceAssembler -> DeviceDTO : createDeviceDTO(device)

activate DeviceDTO
DeviceDTO --> DeviceAssembler : deviceDTO
deactivate DeviceDTO

DeviceAssembler --> Service : deviceDTO
deactivate DeviceAssembler


Service --> Controller : deviceDTO
deactivate Service

Controller --> User : deviceDTO
deactivate Controller
@enduml
