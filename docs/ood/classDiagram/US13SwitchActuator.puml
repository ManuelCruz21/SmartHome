@startuml
'https://plantuml.com/class-diagram

!pragma layout smetana

class SwitchActuator {
'Attributes'
- _actuatorType : ActuatorType
- _value : SwitchActuatorValue
'Methods'
+SwitchActuator (catalogue : CatalogueActuator)
+getActuatorType () : ActuatorType
+setValue (value : Value) : Value
}

class SwitchActuatorValue{
'Attributes'
-_value : boolean
'Methods'
+SwitchActuatorValue(value : boolean)
+toString() : String
+setValueOn() : boolean
+setValueOff(): boolean
+toString() : String
}

interface Value{
+ setValue(value : Value) : Value
}

interface Actuator{
+getActuatorType() : ActuatorType
}

class ActuatorFactory{
'Methods'
+createActuator(strModel : String, repositoryActuator : RepositoryActuator ): Actuator
}

class RepositoryActuator{
'Methods'
- DATA : Map<SensorID, Sensor>
'Attributes'
+ save(entity : Actuator) : Actuator
+ findAll() : Iterable<Actuator>
+ ofIdentity(id : ActuatorID) : <Optional> Actuator
}

class ActuatorType{
'Attributes'
-_strDescription : String
'Methods'
+ActuatorType(strDescription : String)
+ getStrDescription() : String
}

class ActuatorTypeFactory{
+createActuatorType(strDescription : String) : ActuatorType
}

class ActuatorTypeID{
'Attributes'
-_id : String
'Methods'
+ActuatorTypeID(id : String)
+equals(object : Object) : boolean
+toString() : String
}

class RepositoryActuatorType{
'Attributes'
- DATA : Map<ActuatorTypeID, ActuatorType>
'Methods'
+ save(entity : ActuatorType) : ActuatorType
+ findAll() : Iterable<ActuatorType>
+ ofIdentity(id : ActuatorTypeID) : <Optional> ActuatorType
}

class SwitchActuatorID{
'Attributes'
-_id : String
'Methods'
+SwitchActuatorID(id : String)
+equals(object : Object) : boolean
+toString() : String

}

ActuatorFactory "1"..> "1" SwitchActuator : creates >
ActuatorFactory "1"..> "1" RepositoryActuator: uses >
ActuatorTypeFactory "1"..> "1"ActuatorType : creates >
SwitchActuator ..> Actuator : implements >
SwitchActuator "1"..> "1"SwitchActuatorValue : holds >
SwitchActuatorValue ..> Value : implements >
RepositoryActuator "1"..> "1"ActuatorTypeID : uses >
ActuatorTypeFactory "1"..> "1"RepositoryActuatorType : uses >
RepositoryActuator "1"..> "1"ActuatorType : uses >
SwitchActuatorID ..> SwitchActuator : identifies >
@enduml