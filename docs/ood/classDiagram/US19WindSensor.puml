@startuml

!pragma layout smetana

package SmartHome.sensors {

    class WindSensor {
        - final _sensorType : SensorType
        - _value : WindSensorValue
        + WindSensor(catalogue : CatalogueSensor)
        + setSensorType(catalogue : CatalogueSensor) : SensorType)
        + getSensorType() : SensorType
        + getValue() : Value
    }

    class WindSensorValue implements SmartHome.domain.Value {
        - _speed : double
        - _direction : double
        + WindSensorValue(speed : double, direction : double)
        + getSpeed() : double
        + getDirection() : double
    }

}

package SmartHome.domain {

    interface Sensor {
        + getSensorType() : SensorType
        + getValue() : Value
    }

    class SensorType {
    }

    interface Value {
    }

    class CatalogueSensor {
        + getSensorType(description : String) : SensorType
    }
}

SmartHome.sensors.WindSensor ..|> SmartHome.domain.Sensor : <<implements>>
SmartHome.sensors.WindSensor --> SmartHome.domain.SensorType : <<has>>
SmartHome.sensors.WindSensor --* SmartHome.sensors.WindSensorValue : <<has>>
SmartHome.sensors.WindSensor ..> SmartHome.domain.CatalogueSensor : <<uses>>
SmartHome.sensors.WindSensorValue ..|> SmartHome.domain.Value : <<implements>>

@enduml
