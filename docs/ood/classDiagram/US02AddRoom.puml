@startuml
!pragma layout smetana

class AddRoomController<<Controller>> {
- _roomService: RoomService
+AddRoomToHouseController(roomService:RoomService)
+CreateRoom(houseID: String):RoomDTO
}

class RoomService <<Service>>{
- _roomRepository: RoomRepository
- _roomFactory: RoomFactory
- _roomAssembler: RoomAssembler
+RoomService(roomRepository:RoomRepository, roomFactory:RoomFactory, roomAssembler:RoomAssembler)
+addRoom(houseID:String, roomDescription:Description): RoomDTO
}

class RoomRepository <<Repository>>{
- _map<RoomID,Room> room
+addRoomToRepository(room:Room) Room
}

class RoomFactory <<Factory>>{
+createRoom(roomDescription:Description):Description
}

class RoomAssembler <<Assembler>>{
+domain2DTO(room:Room):RoomDTO
}

class RoomDTO <<DTO>>{
+ _roomID: String
+ _description: String
+RoomDTO(room:Room))
}

class Room <<Entity>>{
- _id: RoomID
- _description: Description
- _dimensions: Dimensions
- _floor: Floor
+Room(roomID: RoomID, description: Description, dimensions: Dimensions, floor: Floor)
+getID(): String
+getDescription(): String
+getDimensions(): Dimensions
+getFloor(): Floor
}


AddRoomController "1" .down.> "1" RoomService: uses
RoomService "1" -down-> "1" RoomFactory: has
RoomService "1" -right-> "1" RoomRepository: has
RoomRepository "1" -left-> "1" Room: has
RoomService "1" .left.> "1" RoomAssembler: uses
RoomAssembler "1" .down.> "1" RoomDTO: creates
RoomFactory "1" .down.> "1" Room: creates


@enduml