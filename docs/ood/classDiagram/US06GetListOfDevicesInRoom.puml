@startuml
'https://plantuml.com/class-diagram

class GetListOfDevicesFromRoomController{
'Attributes'
- _serviceRoom: RoomService
- _deviceService : DeviceService
'Methods'
+GetListOfDevicesFromRoomController (serviceRoom : RoomService, serviceDevice : DeviceService)
+getRooms(): List<RoomDTO>
+getDevices(strRoomId : String): List<DeviceDTO>
}

class RoomService{
'Attributes'
- _roomRepository: RoomRepository
-_roomFactory : RoomFactory
- _roomAssembler : RoomAssembler
'Methods'
+RoomService(roomFactory: RoomFactory, roomRepository: RoomRepository, roomAssembler : RoomAssembler
+getRooms(): List<RoomDTO>
}


class RoomRepository{
'Attributes'
- DATA: Map <RoomID, Room>
'Methods'
+RoomRepository()
+findAll(): List<Room>
}

class RoomAssembler{
'Methods'
+domain2DTO(rooms: List<Room>): List<RoomDTO>
}

class RoomDTO{
'Attributes'
+_roomID: RoomID
+_roomName: RoomName
'Methods'
+RoomDTO(roomID: RoomID, roomName: RoomName)
}

class DeviceService{
'Attributes'
- _deviceRepository: DeviceRepository
- _deviceFactory : DeviceFactory
- _deviceAssembler : DeviceAssembler
'Methods'
+DeviceService(deviceFactory: DeviceFactory, deviceRepository: DeviceRepository, deviceAssembler : DeviceAssembler)
+getDevices(strRoomId : String): List<DeviceDTO>
}

class DeviceRepository{
'Attributes'
- DATA: Map <DeviceId, Device>
'Methods'
+DeviceRepository()
+getDevicesByRoomId(roomId : RoomID): List<Devices>
}

class DeviceAssembler {
'Methods'
+domain2DTO(devices: List<Device>): List<DeviceDTO>
}

class DeviceDTO{
'Attributes'
+_deviceID: DeviceID
+_deviceName: DeviceName
'Methods'
+DeviceDTO(deviceID: DeviceID, deviceName: DeviceName)
}



GetListOfDevicesFromRoomController "1" ..> "1" RoomService: uses
RoomService "1" ..> "1" RoomRepository: uses
RoomService "1" ..> "1" RoomAssembler: uses
RoomAssembler "1" ..> "*" RoomDTO: creates

GetListOfDevicesFromRoomController "1" ..> "1" DeviceService: uses
DeviceService "1" ..> "1" DeviceRepository: uses
DeviceService "1" ..> "1" DeviceAssembler: uses
DeviceAssembler "1" ..> "*" DeviceDTO: creates
@enduml