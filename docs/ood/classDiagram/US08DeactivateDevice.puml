@startuml
'https://plantuml.com/class-diagram

!pragma layout smetana
!pragma scale 100 width
!pragma useVerticalIfPossible

class DeactivateDeviceController {
    -deviceService: DeviceService
    +requestAllDevices(): DeviceDTOList
    +requestDeactivateDevice(deviceID: String): DeviceDTO
}

class DeviceService {
    -deviceRepository: DeviceRepository
    -deviceAssembler: DeviceAssembler
    +getAllDevices(): DeviceDTOList
    +deactivateDevice(deviceID: String): DeviceDTO
}

class DeviceRepository implements IDeviceRepository {
    -Map<deviceID, Device> devices
    +findAll(): DeviceList
    +findDeviceById(deviceID: String): Device
}

interface IDeviceRepository {
    +findAll(): List<Device>
    +findDeviceById(deviceID: DeviceID): Device
}

class DeviceAssembler {
    +deviceList2DTO(deviceList: DeviceList): DeviceDTOList
    +device2DTO(device: Device): DeviceDTO
}


class DeviceDTO {
    +deviceID: String
    +isActive: Boolean
    +DeviceDTO(device: Device)
}

class Device<<entity>><<root>> {
    -deviceID: DeviceID
    -isActive: DeviceStatus
    +deactivate(): String
}

class DeviceStatus<<ValueObject>> implements ValueObject{
    -value: Boolean
    +IsActive(value: Boolean)
    +toString(): String
    +equals(other: ValueObject): Boolean
    +hashCode(): Int
}

class DeviceID<<ID>><<ValueObject>> implements ValueObject{
    -id: UUID
    +DeviceID(id: UUID)
    +toString(): String
    +equals(other: ValueObject): Boolean
    +hashCode(): Int
}

interface ValueObject {
    +equals(other: ValueObject): Boolean
    +hashCode(): Int
}

DeactivateDeviceController "1" --> "1" DeviceService: uses >
DeviceService "1" --> "1" DeviceRepository: uses >
DeviceService "1" --> "1" DeviceAssembler: uses >
DeviceAssembler "1" --> "1..*" DeviceDTO: creates >
DeviceService "1" --> "1" Device: <<deactivate>>
Device "1" --> "1" DeviceID: has >
Device "1" --> "1" DeviceStatus: has >
@enduml
