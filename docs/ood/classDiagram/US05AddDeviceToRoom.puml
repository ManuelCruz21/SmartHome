@startuml
!pragma layout smetana

class Device<<entity>> <<root>> {
  - _id: deviceID
  - _description: Description
  + Device(id: Device, description: Description)
  + getId(): string
  + getDescription(): Description
  }

class DeviceFactory<<Factory>> {
  + createNewDevice(description: Description): Device
  }

class DeviceRepository<<Repository>> {
  - _map<ID, Device> device
  + addDeviceToRepository(device: Device): Device
  }
class DeviceService<<Service>> {
  + createNewDevice(name: String): Device
  }

 class RoomService<<Service>> {
  + getRoomByID(id: string) : Room
  }

class RoomRepository<<Repository>> {
  - _map<ID, Room> room
  + findRoom(id: string): Room
  }

class AddDeviceToRoomController<<Controller>> {
  - _deviceService: DeviceService
  - _deviceDTO: DeviceDTO
  - _roomService: RoomService
  + AddDeviceToRoomController(DeviceService: deviceService)
  + createNewDevice(DeviceDTO: deviceDTO): DeviceDTO
  + addDeviceToRepository(DeviceDTO: deviceDTO): DeviceDTO
  + getRoomByID(id: string): Room
  }
class DeviceDTO<<DTO>> {
+ id: string
+ description: string
+ DeviceDTO(device: Device)
}
class DeviceAssembler<<Assembler>> {
  + domain2DTO(device: Device): DeviceDTO
  }


DeviceRepository "1" -down-> "1" Device: has
DeviceService "1"-down->"1  " DeviceFactory: has
DeviceService "1"-down->"1" DeviceRepository: has
DeviceService "1"-down->"1" DeviceAssembler: uses
RoomService "1"-right->"1" RoomRepository: uses
DeviceFactory "1".down.>"1  " Device: creates
AddDeviceToRoomController "1"-down->"1" DeviceService: uses
AddDeviceToRoomController "1"-down->"1" RoomService: uses
DeviceAssembler "1".up.> "1  " DeviceDTO: creates




@enduml