@startuml
!pragma layout smetana

package SmartHome.sensors {

    class InstantPowerConsumptionSensor {
        - _sensorType : SensorType
        - _InstantPowerConsumptionValue : InstantPowerConsumptionValue

        + InstantPowerConsumptionSensor (catalogue : CatalogueSensor)
        +getSensorType () : SensorType
        +getValue () : Value
    }

    class InstantPowerConsumptionValue implements SmartHome.domain.Value {
        - _instantPowerConsumptionValue : double

        + InstantPowerConsumptionValue (instantPowerConsumptionValue : double)
        + toString() : String
    }

}

package SmartHome.domain {

    interface Sensor {
        + getSensorType() : SensorType
        + getValue() : Value
    }

    class SensorType {
    - final _strDescription : String
    - final _unit : Unit

    + SensorType(strDescription : String, unit : Unit)
    + getStrDescription() : String
    + getUnit() : Unit
    }

    interface Value {
    }

    class CatalogueSensor {
    - _listSensorType : List<SensorType>
    - _listStringClassesSensor : List<String>

     + CatalogueSensor(String filePathname)
     + addSensorType(String strDescription, Unit unit, SensorTypeFactory sensorTypeFactory) : SensorType
     + addSensorTypeToList(SensorType sensorType): SensorType
     + getSensorType(String strDescription): SensorType
     + getSensorTypes(): List<SensorType>
     + getSensorModels(): List<String>
     + getSensor(String strModel, SensorFactory sensorFactory): Sensor
        }
}

SmartHome.sensors.InstantPowerConsumptionSensor "1" ..|> "1" SmartHome.domain.Sensor : <<implements>>
SmartHome.sensors.InstantPowerConsumptionSensor "1" --> "1" SmartHome.domain.SensorType : <<has>>
SmartHome.sensors.InstantPowerConsumptionSensor "1" --> "1" SmartHome.sensors.InstantPowerConsumptionValue : <<has>>
SmartHome.domain.CatalogueSensor "1" <.. "1" SmartHome.sensors.InstantPowerConsumptionSensor : <<uses>>
SmartHome.sensors.InstantPowerConsumptionValue  ..|>  SmartHome.domain.Value : <<implements>>

@enduml