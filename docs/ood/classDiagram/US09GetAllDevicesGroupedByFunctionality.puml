@startuml
'https://plantuml.com/class-diagram
!pragma layout smetana

class GetAllDevicesGroupedByFunctionalityController {
    -serDevType: ServiceDeviceType
    -serDev: ServiceDevice

    +GetAllDevicesGroupedByFunctionalityController(serDevType: ServiceDeviceType, serDev: ServiceDevice)
    +getAllDevicesGroupedByFunctionality(): Map<String, List<DeviceDTO>>

}

class ServiceDeviceType {
    -factoryDevType: FactoryDeviceType
    -repoDevType: RepositoryDeviceType
    +ServiceDeviceType(factoryDevType: FactoryDeviceType, repoDevType: RepositoryDeviceType)
    +getDeviceTypes(): List<DeviceTypeDTO>
}

class ServiceDevice {
    -factoryDevice: FactoryDevice
    -repoDevice: RepositoryDevice
    +ServiceDevice(factoryDevice: FactoryDevice, repoDevice: RepositoryDevice)
    +getDevices(): List<DeviceDTO>
}

class RepositoryDeviceType {
    -data: HashMap<DeviceTypeID, DeviceType>
    +RepositoryDeviceType()
    +findAll(): List<DeviceType>
}

class RepositoryDevice {
    -data: HashMap<DeviceID, Device>
    +RepositoryDevice()
    +findAll(): List<Device>
}

class DeviceTypeAssembler {
    +deviceType2DTO(deviceType: DeviceType): DeviceTypeDTO
}

class DeviceAssembler {
    +device2DTO(device: Device): DeviceDTO
}

class DeviceTypeDTO {
    +id: String
    +deviceDescription: String
    +DeviceTypeDTO(id: DeviceTypeID, deviceDescription: DeviceDescription)
}

class DeviceDTO {
    +id: String
    +roomID: String
    +name: String
    +deviceType: String
    +DeviceDTO(id: DeviceID, roomID: RoomID, name: DeviceName, deviceType: DeviceType)
}

GetAllDevicesGroupedByFunctionalityController "1" ..> "1" ServiceDeviceType: uses
ServiceDeviceType "1" ..> "1" RepositoryDeviceType: uses
ServiceDeviceType "1" ..> "1" DeviceTypeAssembler: uses
DeviceTypeAssembler "1" ..> "1" DeviceTypeDTO: creates

GetAllDevicesGroupedByFunctionalityController "1" ..> "1" ServiceDevice: uses
ServiceDevice "1" ..> "1" RepositoryDevice: uses
ServiceDevice "1" ..> "1" DeviceAssembler: uses
DeviceAssembler "1" ..> "1" DeviceDTO: creates
@enduml