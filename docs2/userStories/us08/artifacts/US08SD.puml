@startuml
'https://plantuml.com/sequence-diagram

autonumber

    participant " " as User
    participant ":DeactivateDeviceController" as Controller
    participant ":DeviceService" as Service
    participant ":DeviceRepository" as Repository
    participant ":DeviceAssembler" as Assembler
    participant "deviceDTO:DeviceDTO" as DTO
    participant ":Device" as Device

' Request all devices

    User -> Controller: requestAllDevices()
    activate Controller
    Controller -> Service: getAllDevices()
    activate Service
    Service -> Repository: findAll()
    activate Repository
    Repository --> Service: deviceList
    deactivate Repository

    Service -> Assembler: deviceListToDTO(deviceList)
    activate Assembler
    loop for each device in deviceList
        create DTO
        Assembler -> DTO: DeviceDTO(device)
        activate DTO
        DTO --> Assembler: deviceDTO
        deactivate DTO
    end
    Assembler --> Service: deviceDTOList
    deactivate Assembler

    Service --> Controller: deviceDTOList
    deactivate Service
    Controller --> User: deviceDTOList
    deactivate Controller

' Deactivate device

    User -> Controller: requestDeactivateDevice(strDeviceID)
    activate Controller
    Controller -> Service: deactivateDevice(strDeviceID)
    activate Service
    Service -> Repository: findDeviceById(deviceID)
    activate Repository
    Repository --> Service: device
    deactivate Repository

   Service -> Device: deactivate()
   activate Device
   ' The deactivate() method internally updates the Device's status to inactive.
   ' This is an internal detail, so the creation/modification of the status value object is not explicitly represented.
   deactivate Device

   Service --> Repository: save(device)
   ' Updated to save the whole device, reflecting the change in status.
   activate Repository
   Repository --> Service: device
   ' The Repository confirms the save operation, potentially returning a status or acknowledgment.
   deactivate Repository


    Service -> Assembler: device2DTO(device)
    activate Assembler
    Assembler -> DTO: DeviceDTO(device)
    activate DTO
    DTO --> Assembler: deviceDTO
    deactivate DTO
    Assembler --> Service: deviceDTO
    deactivate Assembler

    Service --> Controller: deviceDTO
    deactivate Service
    Controller --> User: deviceDTO
    deactivate Controller

@enduml
